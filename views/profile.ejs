<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Profile</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">

  <style>
    body {
      background-color: #e9ecef;
      min-height: 100vh;
      font-family: Arial, sans-serif;
      overflow: hidden;
    }

    header {
      background-color: #343a40;
      color: white;
      padding: 15px 0;
      position: sticky;
      top: 0;
      z-index: 10;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .title {
      margin: 0;
      font-size: 48px;
      text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
      white-space: nowrap;
      overflow: hidden;
      border-right: .15em solid orange;
      animation: typing-title1 4s steps(12), blink-caret 0.75s step-end infinite;
    }

    @keyframes typing-title1 {
      from {
        width: 0;
      }

      to {
        width: 12ch;
      }
    }

    @keyframes blink-caret {
      from,
      to {
        border-color: transparent;
      }

      50% {
        border-color: orange;
      }
    }

    .nav-link {
      color: white;
      text-decoration: none;
      font-size: 18px;
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .upload-container {
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      background-color: #f8f9fa;
      border-radius: 15px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
      padding: 30px;
      width: 60%; /* Adjusted width */
      margin: 40px auto; /* Centered with auto margin */
      transition: transform 0.3s, box-shadow 0.3s;
    }

    .upload-container:hover {
      transform: translateY(-5px);
      box-shadow: 0 6px 30px rgba(0, 0, 0, 0.25);
    }

    .upload-box {
      width: 100%;
      border: 2px solid #89278d; /* Solid border color */
      border-radius: 10px;
      padding: 30px;
      text-align: center;
      margin-bottom: 20px;
      color: #30128c;
      font-size: 22px;
      background-color: #fff; /* White background for contrast */
    }

    .wallet {
      cursor: pointer;
      transition: transform 0.3s, box-shadow 0.3s, background-color 0.3s;
      border-radius: 8px;
      background-color: #f8f9fa; /* Light background color */
      padding: 15px;
      margin: 10px 0;
      border: 2px solid #007bff; /* Border color for contrast */
      position: relative;
      overflow: hidden;
    }

    .wallet:hover {
      transform: scale(1.05); /* Scale effect on hover */
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
      background-color: #e7f1ff; /* Change background color on hover */
    }

    .wallet-name {
      font-weight: bold;
      color: #007bff; /* Highlighted wallet name color */
      font-size: 1.25rem;
    }

    .text-muted {
      font-size: 0.9rem;
      color: #6c757d; /* Muted color for public key */
    }

    .modal-content {
      border-radius: 8px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    }

    .modal-header {
      background-color: #343a40;
      color: white;
    }

    .modal-body {
      font-size: 1.25rem; /* Larger text size */
      color: #212529; /* Darker text color for readability */
      padding: 20px;
    }

    .modal-footer {
      border-top: none;
    }

    .result-popup {
      display: none;
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      z-index: 1000;
    }

    .result-popup-content {
      padding: 20px;
      background-color: white;
      border-radius: 8px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
      animation: fadeIn 0.3s forwards; /* Fade-in animation */
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translate(-50%, -60%); /* Start slightly higher */
      }

      to {
        opacity: 1;
        transform: translate(-50%, -50%);
      }
    }

    .result-popup-content button {
      background-color: #343a40;
      color: white;
      border: none;
      padding: 8px 12px;
      border-radius: 4px;
      cursor: pointer;
      transition: background-color 0.2s;
    }

    .result-popup-content button:hover {
      background-color: #495057; /* Darken button on hover */
    }
  </style>
</head>

<body>
  <header>
    <div class="container">
      <div class="d-flex justify-content-between align-items-center">
        <div>
          <a href="/" class="logo">
            <img src="https://i.ibb.co/8m2PTDw/DF-logo.jpg" alt="DF-logo" height="50" />
          </a>
        </div>
        <div class="teamName">
          <p class="title">DataFort Inc.</p>
        </div>
        <div>
          <a href="/upload_file" class="nav-link text-white d-flex flex-column align-items-center">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-person-circle" viewBox="0 0 16 16">
              <path d="M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0" />
              <path fill-rule="evenodd" d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8m8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1" />
            </svg>
            Upload Files
          </a>
        </div>
      </div>
    </div>


  </header>

  <div class="upload-container">
    <div class="upload-box">
      <h2 class="card-title text-center mb-4">User Profile</h2>
      <p class="card-text"><strong>Username:</strong> <%= name %></p>
      <p class="card-text"><strong>Email:</strong> <%= email %></p>

      <div class="wallets mt-4">
        <h3>Your Wallets:</h3>
        <% for (var i = 0; i < wallet; i++) { %>
          <div class="wallet" onclick="fetchPrivateKey('<%= i + 1 %>')">
            <div class="d-flex justify-content-between">
              <span class="wallet-name">Wallet <%= i + 1 %></span>
              <span class="text-muted">Public Key: <%= pubkey[i] %></span>
            </div>
          </div>
        <% } %>
      </div>
    </div>

    <button class="btn btn-danger mt-4" onclick="logout()">Logout</button> <!-- Logout Button inside upload container -->
  </div>
    </div>
  </div>

  <!-- Modal for private key -->
  <div class="modal fade" id="resultModal" tabindex="-1" aria-labelledby="resultModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="resultModalLabel">Private Key</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <p id="resultMessage"></p>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

  <div class="result-popup" id="resultPopup">
    <div class="result-popup-content">
      <p id="resultText"></p>
      <button onclick="closeResultPopup()">OK</button>
    </div>
  </div>

  <script>
async function fetchPrivateKey(walletId) {
  try {
    const response = await fetch(`/get-private-key/${walletId}`); //
    const data = await response.json();

    // Corrected resultMessage syntax
    const resultMessage = data.privateKey ? `Your Private Key: ${data.privateKey}` : data.message;

    // Show the modal using Bootstrap's modal method
    document.getElementById('resultMessage').innerText = resultMessage;
    const resultModal = new bootstrap.Modal(document.getElementById('resultModal'));
    resultModal.show();
  } catch (error) {
    console.error('Error:', error);
    document.getElementById('resultMessage').innerText = 'An error occurred. Please try again.';
    const resultModal = new bootstrap.Modal(document.getElementById('resultModal'));
    resultModal.show();
  }
}

    document.addEventListener('DOMContentLoaded', () => {
      // Animate the profile container
      const profileContainer = document.querySelector('.profile-container');
      profileContainer.style.opacity = 1;
      profileContainer.style.transform = 'translateY(0)';
    });
  </script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>
